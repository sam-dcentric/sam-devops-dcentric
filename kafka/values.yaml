---
## Set default image, imageTag, and imagePullPolicy. 
## ref: https://hub.docker.com/_/kafka
##
image:
  repository: confluentinc/cp-kafka
  tag: "7.3.2"
  pullPolicy: Always

env:
  KAFKA_BROKER_ID: 1
  KAFKA_ZOOKEEPER_CONNECT: zookeeper.kafka.svc.cluster.local:2181
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
  KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka.kafka.svc.cluster.local:29092
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

## Expose the nifi service to be accessed from outside the cluster (LoadBalancer service).
## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  type: ClusterIP
  port: 9092
  annotations: {}
  ## clusterIP:

  ## Set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  # loadBalancerIP:

  ## Load Balancer sources
  ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ##
  # loadBalancerSourceRanges:
  # - 10.10.10.0/24

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence: {}
  # enabled: true
  # existingClaim: "kafka"
  # mountPath: /var/lib/kafka/data
  # subPath: ""
  # accessModes:  [ReadWriteOnce]
  # ## Storage Capacity for persistent volume
  # size: 5Gi
  # annotations: {}


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 512Mi
  # requests:
  #  cpu: 1m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

# livenessProbe:
#   tcpSocket:
#     port: 9092
#   initialDelaySeconds: 15
#   periodSeconds: 20