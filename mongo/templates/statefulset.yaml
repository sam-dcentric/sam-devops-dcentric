---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "mongo.fullname" . }}
  labels:
    app: {{ include "mongo.name" . }}
    chart: {{ template "mongo.chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  serviceName: {{ template "mongo.fullname" . }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "mongo.name" . }}
      release: {{ .Release.Name | quote }}
  template:
    metadata:
      name: {{ template "mongo.fullname" . }}
      labels:
        app: {{ include "mongo.name" . | quote }}
        chart: {{ template "mongo.chart" . }}
        release: {{ .Release.Name | quote }}
        heritage: {{ .Release.Service | quote }}
    spec:
      containers:
      - name: {{ template "mongo.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        {{- range $key, $val := .Values.env }}
          - name: {{ $key }}
            value: {{ $val | quote }}
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - name: mongo
          containerPort: {{ .Values.service.port }}
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
        readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
        volumeMounts:
        {{- if .Values.persistence.enabled }}
        - name: data
          mountPath: {{ .Values.persistence.mountPath }}
          subPath: {{ .Values.persistence.subPath }}
          readOnly: false
        {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.nodeName }}
      nodeName: {{ .Values.nodeName | quote }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      volumes:
{{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
      - name: data
        persistentVolumeClaim:
{{- with .Values.persistence.existingClaim }}
          claimName: {{ tpl . $ }}
{{- end }}
{{- else if not .Values.persistence.enabled }}
      - name: data
        emptyDir: {}
{{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
      {{- with .Values.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        {{- with .Values.persistence.storageClass }}
        storageClassName: {{ tpl . $ }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
{{- end }}
